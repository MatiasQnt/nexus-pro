{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matias\\\\nexus-pro\\\\src\\\\pages\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { DollarSign, ShoppingCart, Package } from 'lucide-react';\nimport { StatCard, Card } from '../../components/ui/ComponentesUI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardAdmin = ({\n  productos,\n  ventas\n}) => {\n  _s();\n  // Usamos useMemo para optimizar el cálculo, solo se recalculará si las ventas cambian.\n  const ventasTotales = useMemo(() => ventas.reduce((sum, sale) => sum + parseFloat(sale.final_amount), 0), [ventas]);\n\n  // Optimizamos el cálculo de los datos para el gráfico\n  const datosGrafico = useMemo(() => {\n    const ventasPorDia = ventas.reduce((acc, sale) => {\n      const fecha = new Date(sale.date_time).toLocaleDateString('es-AR', {\n        weekday: 'short'\n      });\n      acc[fecha] = (acc[fecha] || 0) + parseFloat(sale.final_amount);\n      return acc;\n    }, {});\n    // Formateamos los datos para que sean compatibles con la librería de gráficos\n    return Object.keys(ventasPorDia).map(dia => ({\n      name: dia,\n      Ventas: ventasPorDia[dia]\n    }));\n  }, [ventas]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-800\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Ventas Totales\",\n        value: `$${ventasTotales.toFixed(2)}`,\n        icon: DollarSign,\n        color: \"bg-green-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Transacciones\",\n        value: ventas.length,\n        icon: ShoppingCart,\n        color: \"bg-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Productos Activos\",\n        value: productos.length,\n        icon: Package,\n        color: \"bg-purple-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-gray-800 mb-4\",\n        children: \"Ventas de la Semana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: datosGrafico,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => `$${value.toFixed(2)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"Ventas\",\n            fill: \"#4f46e5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardAdmin, \"wUAPVqobOCpxAoy0XiOmrUwYOFg=\");\n_c = DashboardAdmin;\nexport default DashboardAdmin;\nvar _c;\n$RefreshReg$(_c, \"DashboardAdmin\");","map":{"version":3,"names":["React","useMemo","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","DollarSign","ShoppingCart","Package","StatCard","Card","jsxDEV","_jsxDEV","DashboardAdmin","productos","ventas","_s","ventasTotales","reduce","sum","sale","parseFloat","final_amount","datosGrafico","ventasPorDia","acc","fecha","Date","date_time","toLocaleDateString","weekday","Object","keys","map","dia","name","Ventas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","toFixed","icon","color","length","width","height","data","strokeDasharray","dataKey","formatter","fill","_c","$RefreshReg$"],"sources":["C:/Users/Matias/nexus-pro/src/pages/dashboard/Dashboard.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { DollarSign, ShoppingCart, Package } from 'lucide-react';\r\nimport { StatCard, Card } from '../../components/ui/ComponentesUI';\r\n\r\nconst DashboardAdmin = ({ productos, ventas }) => {\r\n    // Usamos useMemo para optimizar el cálculo, solo se recalculará si las ventas cambian.\r\n    const ventasTotales = useMemo(() => \r\n        ventas.reduce((sum, sale) => sum + parseFloat(sale.final_amount), 0), \r\n        [ventas]\r\n    );\r\n    \r\n    // Optimizamos el cálculo de los datos para el gráfico\r\n    const datosGrafico = useMemo(() => {\r\n        const ventasPorDia = ventas.reduce((acc, sale) => {\r\n            const fecha = new Date(sale.date_time).toLocaleDateString('es-AR', { weekday: 'short' });\r\n            acc[fecha] = (acc[fecha] || 0) + parseFloat(sale.final_amount);\r\n            return acc;\r\n        }, {});\r\n        // Formateamos los datos para que sean compatibles con la librería de gráficos\r\n        return Object.keys(ventasPorDia).map(dia => ({ name: dia, Ventas: ventasPorDia[dia] }));\r\n    }, [ventas]);\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <h1 className=\"text-3xl font-bold text-gray-800\">Dashboard</h1>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n                <StatCard \r\n                    title=\"Ventas Totales\" \r\n                    value={`$${ventasTotales.toFixed(2)}`} \r\n                    icon={DollarSign} \r\n                    color=\"bg-green-500\" \r\n                />\r\n                <StatCard \r\n                    title=\"Transacciones\" \r\n                    value={ventas.length} \r\n                    icon={ShoppingCart} \r\n                    color=\"bg-blue-500\" \r\n                />\r\n                <StatCard \r\n                    title=\"Productos Activos\" \r\n                    value={productos.length} \r\n                    icon={Package} \r\n                    color=\"bg-purple-500\" \r\n                />\r\n            </div>\r\n            <Card>\r\n                <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Ventas de la Semana</h2>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <BarChart data={datosGrafico}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip formatter={(value) => `$${value.toFixed(2)}`} />\r\n                        <Legend />\r\n                        <Bar dataKey=\"Ventas\" fill=\"#4f46e5\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardAdmin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}