{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matias\\\\nexus-pro\\\\src\\\\pages\\\\actualizar-precios\\\\ActualizacionMasivaPrecios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useMemo } from 'react';\nimport { ContextoAuth } from '../../context/AuthContext';\nimport { Button, Card, Table } from '../../components/ui/ComponentesUI';\n// 1. Importamos el hook que maneja la lógica de paginación\nimport { useFiltrosYBusqueda } from '../../hooks/useFiltrosYBusqueda';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://127.0.0.1:8000/api';\nconst ActualizacionMasivaPrecios = ({\n  productos,\n  proveedores,\n  obtenerDatos\n}) => {\n  _s();\n  const [proveedorSeleccionado, setProveedorSeleccionado] = useState('');\n  const [productosSeleccionados, setProductosSeleccionados] = useState(new Set());\n  const [porcentaje, setPorcentaje] = useState('');\n  const [objetivo, setObjetivo] = useState('both');\n  const {\n    tokensAuth\n  } = useContext(ContextoAuth);\n\n  // Filtramos los productos según el proveedor seleccionado. Esta lista es la que paginaremos.\n  const productosFiltrados = useMemo(() => {\n    if (!proveedorSeleccionado) return [];\n    return productos.filter(p => p.provider === parseInt(proveedorSeleccionado));\n  }, [productos, proveedorSeleccionado]);\n\n  // 2. Usamos el hook para paginar la lista de productos YA filtrada\n  const {\n    datosPaginados,\n    PaginacionUI\n  } = useFiltrosYBusqueda({\n    items: productosFiltrados,\n    itemsPorPagina: 10,\n    // No necesitamos lógica de filtro adicional, así que simplemente devolvemos los items\n    logicaDeFiltro: items => items,\n    // No necesitamos un componente de filtro, así que pasamos uno que no renderiza nada\n    ComponenteFiltros: () => null,\n    filtrosIniciales: {}\n  });\n  const seleccionarTodos = () => {\n    // La lógica de \"seleccionar todo\" debe operar sobre la lista completa de productos filtrados, no solo la página actual\n    if (productosSeleccionados.size === productosFiltrados.length) {\n      setProductosSeleccionados(new Set());\n    } else {\n      setProductosSeleccionados(new Set(productosFiltrados.map(p => p.id)));\n    }\n  };\n  const seleccionarProducto = idProducto => {\n    const nuevaSeleccion = new Set(productosSeleccionados);\n    if (nuevaSeleccion.has(idProducto)) {\n      nuevaSeleccion.delete(idProducto);\n    } else {\n      nuevaSeleccion.add(idProducto);\n    }\n    setProductosSeleccionados(nuevaSeleccion);\n  };\n  const actualizarPrecios = async () => {\n    if (productosSeleccionados.size === 0 || !porcentaje || !objetivo) {\n      alert(\"Por favor, selecciona productos, un porcentaje y un objetivo de actualización.\");\n      return;\n    }\n    const payload = {\n      product_ids: Array.from(productosSeleccionados),\n      percentage: porcentaje,\n      update_target: objetivo\n    };\n    if (window.confirm(`¿Seguro que quieres actualizar ${productosSeleccionados.size} productos con un ${porcentaje}% de aumento?`)) {\n      try {\n        const response = await fetch(`${API_URL}/bulk-price-update/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + String(tokensAuth.access)\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(JSON.stringify(errorData));\n        }\n        alert('Precios actualizados con éxito.');\n        obtenerDatos();\n        setProductosSeleccionados(new Set());\n        setPorcentaje('');\n      } catch (err) {\n        alert(`Error al actualizar precios: ${err.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-800\",\n      children: \"Actualizaci\\xF3n Masiva de Precios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 items-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Filtrar por Proveedor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: proveedorSeleccionado,\n            onChange: e => setProveedorSeleccionado(e.target.value),\n            className: \"p-2 border rounded-lg w-full mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccionar Proveedor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), proveedores.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p.id,\n              children: p.name\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 51\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Porcentaje de Aumento (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: porcentaje,\n            onChange: e => setPorcentaje(e.target.value),\n            placeholder: \"Ej: 15\",\n            className: \"p-2 border rounded-lg w-full mt-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Actualizar Precio de:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4 mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"target\",\n                value: \"cost\",\n                checked: objetivo === 'cost',\n                onChange: e => setObjetivo(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 72\n              }, this), \" Costo\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"target\",\n                value: \"sale\",\n                checked: objetivo === 'sale',\n                onChange: e => setObjetivo(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 72\n              }, this), \" Venta\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"target\",\n                value: \"both\",\n                checked: objetivo === 'both',\n                onChange: e => setObjetivo(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 72\n              }, this), \" Ambos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: actualizarPrecios,\n          disabled: productosSeleccionados.size === 0 || !porcentaje,\n          children: [\"Actualizar \", productosSeleccionados.size, \" Productos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), proveedorSeleccionado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        headers: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: seleccionarTodos,\n          checked: productosSeleccionados.size > 0 && productosFiltrados.length > 0 && productosSeleccionados.size === productosFiltrados.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this), 'SKU', 'Nombre', 'Costo Actual', 'Venta Actual']\n        // 3. Pasamos los datos paginados a la tabla\n        ,\n        data: datosPaginados,\n        renderRow: p => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-white border-b hover:bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: productosSeleccionados.has(p.id),\n              onChange: () => seleccionarProducto(p.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4\",\n            children: p.sku\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4\",\n            children: p.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4\",\n            children: [\"$\", parseFloat(p.cost_price).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4\",\n            children: [\"$\", parseFloat(p.sale_price).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), PaginacionUI]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Card, {\n      className: \"text-center text-gray-500\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Por favor, seleccione un proveedor para ver sus productos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(ActualizacionMasivaPrecios, \"x7chFoBWLHgvHH5anX/KpwG5wVw=\", false, function () {\n  return [useFiltrosYBusqueda];\n});\n_c = ActualizacionMasivaPrecios;\nexport default ActualizacionMasivaPrecios;\nvar _c;\n$RefreshReg$(_c, \"ActualizacionMasivaPrecios\");","map":{"version":3,"names":["React","useState","useContext","useMemo","ContextoAuth","Button","Card","Table","useFiltrosYBusqueda","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","ActualizacionMasivaPrecios","productos","proveedores","obtenerDatos","_s","proveedorSeleccionado","setProveedorSeleccionado","productosSeleccionados","setProductosSeleccionados","Set","porcentaje","setPorcentaje","objetivo","setObjetivo","tokensAuth","productosFiltrados","filter","p","provider","parseInt","datosPaginados","PaginacionUI","items","itemsPorPagina","logicaDeFiltro","ComponenteFiltros","filtrosIniciales","seleccionarTodos","size","length","map","id","seleccionarProducto","idProducto","nuevaSeleccion","has","delete","add","actualizarPrecios","alert","payload","product_ids","Array","from","percentage","update_target","window","confirm","response","fetch","method","headers","String","access","body","JSON","stringify","ok","errorData","json","Error","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","name","type","placeholder","checked","onClick","disabled","data","renderRow","sku","parseFloat","cost_price","toFixed","sale_price","_c","$RefreshReg$"],"sources":["C:/Users/Matias/nexus-pro/src/pages/actualizar-precios/ActualizacionMasivaPrecios.js"],"sourcesContent":["import React, { useState, useContext, useMemo } from 'react';\r\nimport { ContextoAuth } from '../../context/AuthContext';\r\nimport { Button, Card, Table } from '../../components/ui/ComponentesUI';\r\n// 1. Importamos el hook que maneja la lógica de paginación\r\nimport { useFiltrosYBusqueda } from '../../hooks/useFiltrosYBusqueda';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000/api';\r\n\r\nconst ActualizacionMasivaPrecios = ({ productos, proveedores, obtenerDatos }) => {\r\n    const [proveedorSeleccionado, setProveedorSeleccionado] = useState('');\r\n    const [productosSeleccionados, setProductosSeleccionados] = useState(new Set());\r\n    const [porcentaje, setPorcentaje] = useState('');\r\n    const [objetivo, setObjetivo] = useState('both');\r\n    const { tokensAuth } = useContext(ContextoAuth);\r\n\r\n    // Filtramos los productos según el proveedor seleccionado. Esta lista es la que paginaremos.\r\n    const productosFiltrados = useMemo(() => {\r\n        if (!proveedorSeleccionado) return [];\r\n        return productos.filter(p => p.provider === parseInt(proveedorSeleccionado));\r\n    }, [productos, proveedorSeleccionado]);\r\n\r\n\r\n    // 2. Usamos el hook para paginar la lista de productos YA filtrada\r\n    const { datosPaginados, PaginacionUI } = useFiltrosYBusqueda({\r\n        items: productosFiltrados,\r\n        itemsPorPagina: 10,\r\n        // No necesitamos lógica de filtro adicional, así que simplemente devolvemos los items\r\n        logicaDeFiltro: (items) => items, \r\n        // No necesitamos un componente de filtro, así que pasamos uno que no renderiza nada\r\n        ComponenteFiltros: () => null, \r\n        filtrosIniciales: {}\r\n    });\r\n\r\n\r\n    const seleccionarTodos = () => {\r\n        // La lógica de \"seleccionar todo\" debe operar sobre la lista completa de productos filtrados, no solo la página actual\r\n        if (productosSeleccionados.size === productosFiltrados.length) {\r\n            setProductosSeleccionados(new Set());\r\n        } else {\r\n            setProductosSeleccionados(new Set(productosFiltrados.map(p => p.id)));\r\n        }\r\n    };\r\n    \r\n    const seleccionarProducto = (idProducto) => {\r\n        const nuevaSeleccion = new Set(productosSeleccionados);\r\n        if (nuevaSeleccion.has(idProducto)) {\r\n            nuevaSeleccion.delete(idProducto);\r\n        } else {\r\n            nuevaSeleccion.add(idProducto);\r\n        }\r\n        setProductosSeleccionados(nuevaSeleccion);\r\n    };\r\n\r\n    const actualizarPrecios = async () => {\r\n        if(productosSeleccionados.size === 0 || !porcentaje || !objetivo) {\r\n            alert(\"Por favor, selecciona productos, un porcentaje y un objetivo de actualización.\");\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            product_ids: Array.from(productosSeleccionados),\r\n            percentage: porcentaje,\r\n            update_target: objetivo\r\n        };\r\n\r\n        if(window.confirm(`¿Seguro que quieres actualizar ${productosSeleccionados.size} productos con un ${porcentaje}% de aumento?`)) {\r\n            try {\r\n                const response = await fetch(`${API_URL}/bulk-price-update/`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + String(tokensAuth.access) },\r\n                    body: JSON.stringify(payload)\r\n                });\r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    throw new Error(JSON.stringify(errorData));\r\n                }\r\n                alert('Precios actualizados con éxito.');\r\n                obtenerDatos();\r\n                setProductosSeleccionados(new Set());\r\n                setPorcentaje('');\r\n            } catch (err) {\r\n                alert(`Error al actualizar precios: ${err.message}`);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <h1 className=\"text-3xl font-bold text-gray-800\">Actualización Masiva de Precios</h1>\r\n            <Card>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 items-end\">\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Filtrar por Proveedor</label>\r\n                        <select value={proveedorSeleccionado} onChange={(e) => setProveedorSeleccionado(e.target.value)} className=\"p-2 border rounded-lg w-full mt-1\">\r\n                            <option value=\"\">Seleccionar Proveedor</option>\r\n                            {proveedores.map(p => <option key={p.id} value={p.id}>{p.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                         <label className=\"block text-sm font-medium text-gray-700\">Porcentaje de Aumento (%)</label>\r\n                         <input type=\"number\" value={porcentaje} onChange={(e) => setPorcentaje(e.target.value)} placeholder=\"Ej: 15\" className=\"p-2 border rounded-lg w-full mt-1\"/>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Actualizar Precio de:</label>\r\n                        <div className=\"flex gap-4 mt-2\">\r\n                            <label className=\"flex items-center gap-2\"><input type=\"radio\" name=\"target\" value=\"cost\" checked={objetivo === 'cost'} onChange={e => setObjetivo(e.target.value)}/> Costo</label>\r\n                            <label className=\"flex items-center gap-2\"><input type=\"radio\" name=\"target\" value=\"sale\" checked={objetivo === 'sale'} onChange={e => setObjetivo(e.target.value)}/> Venta</label>\r\n                            <label className=\"flex items-center gap-2\"><input type=\"radio\" name=\"target\" value=\"both\" checked={objetivo === 'both'} onChange={e => setObjetivo(e.target.value)}/> Ambos</label>\r\n                        </div>\r\n                    </div>\r\n                    <Button onClick={actualizarPrecios} disabled={productosSeleccionados.size === 0 || !porcentaje}>Actualizar {productosSeleccionados.size} Productos</Button>\r\n                </div>\r\n            </Card>\r\n\r\n            {proveedorSeleccionado ? (\r\n                <>\r\n                    <Table \r\n                        headers={[\r\n                            <input type=\"checkbox\" onChange={seleccionarTodos} checked={productosSeleccionados.size > 0 && productosFiltrados.length > 0 && productosSeleccionados.size === productosFiltrados.length}/>, \r\n                            'SKU', 'Nombre', 'Costo Actual', 'Venta Actual'\r\n                        ]} \r\n                        // 3. Pasamos los datos paginados a la tabla\r\n                        data={datosPaginados} \r\n                        renderRow={(p) => (\r\n                            <tr key={p.id} className=\"bg-white border-b hover:bg-gray-50\">\r\n                                <td className=\"px-6 py-4\"><input type=\"checkbox\" checked={productosSeleccionados.has(p.id)} onChange={() => seleccionarProducto(p.id)}/></td>\r\n                                <td className=\"px-6 py-4\">{p.sku}</td>\r\n                                <td className=\"px-6 py-4\">{p.name}</td>\r\n                                <td className=\"px-6 py-4\">${parseFloat(p.cost_price).toFixed(2)}</td>\r\n                                <td className=\"px-6 py-4\">${parseFloat(p.sale_price).toFixed(2)}</td>\r\n                            </tr>\r\n                        )}\r\n                    />\r\n                    {/* 4. Renderizamos la UI de paginación */}\r\n                    {PaginacionUI}\r\n                </>\r\n            ) : (\r\n                <Card className=\"text-center text-gray-500\">\r\n                    <p>Por favor, seleccione un proveedor para ver sus productos.</p>\r\n                </Card>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActualizacionMasivaPrecios;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}