{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matias\\\\nexus-pro\\\\src\\\\pages\\\\productos\\\\FiltrosProductos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Input, Button } from '../../components/ui/ComponentesUI';\n\n// Este componente recibe las funciones para manipular los filtros desde el hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FiltrosProductos = ({\n  setFiltros,\n  filtros,\n  resetFiltros\n}) => {\n  _s();\n  // Estado local para el término de búsqueda, para no triggerear la API en cada tecleo\n  const [searchTerm, setSearchTerm] = useState(filtros.search || '');\n\n  // Efecto para aplicar el debounce\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      // Pasados 500ms de inactividad, actualizamos el filtro principal,\n      // lo que dispara la llamada a la API en el hook.\n      // Usamos una función para garantizar que tomamos el estado más reciente de los filtros.\n      setFiltros(prevFiltros => ({\n        ...prevFiltros,\n        search: searchTerm\n      }));\n    }, 500); // 500ms de espera\n\n    // Se limpia el timeout si el usuario sigue escribiendo, reiniciando el contador.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [searchTerm, setFiltros]); // Solo se ejecuta cuando 'searchTerm' o 'setFiltros' cambian\n\n  const handleReset = () => {\n    setSearchTerm('');\n    resetFiltros();\n  };\n\n  // Al montar el componente, nos aseguramos que el estado local refleje el filtro global.\n  useEffect(() => {\n    setSearchTerm(filtros.search || '');\n  }, [filtros.search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap items-center gap-4 p-4 bg-gray-50 rounded-lg border\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow min-w-[250px]\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Buscar por Nombre, SKU o Descripci\\xF3n...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-shrink-0\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        variant: \"outline\",\n        children: \"Limpiar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(FiltrosProductos, \"Bn9MMeU/3Kkb2Hc8ourdwKbOSbM=\");\n_c = FiltrosProductos;\nexport default FiltrosProductos;\nvar _c;\n$RefreshReg$(_c, \"FiltrosProductos\");","map":{"version":3,"names":["React","useState","useEffect","Input","Button","jsxDEV","_jsxDEV","FiltrosProductos","setFiltros","filtros","resetFiltros","_s","searchTerm","setSearchTerm","search","handler","setTimeout","prevFiltros","clearTimeout","handleReset","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","_c","$RefreshReg$"],"sources":["C:/Users/Matias/nexus-pro/src/pages/productos/FiltrosProductos.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Input, Button } from '../../components/ui/ComponentesUI';\r\n\r\n// Este componente recibe las funciones para manipular los filtros desde el hook\r\nconst FiltrosProductos = ({ setFiltros, filtros, resetFiltros }) => {\r\n    // Estado local para el término de búsqueda, para no triggerear la API en cada tecleo\r\n    const [searchTerm, setSearchTerm] = useState(filtros.search || '');\r\n\r\n    // Efecto para aplicar el debounce\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            // Pasados 500ms de inactividad, actualizamos el filtro principal,\r\n            // lo que dispara la llamada a la API en el hook.\r\n            // Usamos una función para garantizar que tomamos el estado más reciente de los filtros.\r\n            setFiltros(prevFiltros => ({ ...prevFiltros, search: searchTerm }));\r\n        }, 500); // 500ms de espera\r\n\r\n        // Se limpia el timeout si el usuario sigue escribiendo, reiniciando el contador.\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [searchTerm, setFiltros]); // Solo se ejecuta cuando 'searchTerm' o 'setFiltros' cambian\r\n\r\n    const handleReset = () => {\r\n        setSearchTerm('');\r\n        resetFiltros();\r\n    };\r\n\r\n    // Al montar el componente, nos aseguramos que el estado local refleje el filtro global.\r\n    useEffect(() => {\r\n        setSearchTerm(filtros.search || '');\r\n    }, [filtros.search]);\r\n\r\n    return (\r\n        <div className=\"flex flex-wrap items-center gap-4 p-4 bg-gray-50 rounded-lg border\">\r\n            <div className=\"flex-grow min-w-[250px]\">\r\n                <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar por Nombre, SKU o Descripción...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"w-full\"\r\n                />\r\n            </div>\r\n            \r\n            {/* Aquí podrías añadir otros filtros, como un Select para Categorías o Proveedores */}\r\n            {/* <Select>\r\n                <SelectTrigger className=\"w-[180px]\">\r\n                    <SelectValue placeholder=\"Categoría\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                    <SelectItem value=\"light\">Light</SelectItem>\r\n                </SelectContent>\r\n            </Select> \r\n            */}\r\n            \r\n            <div className=\"flex-shrink-0\">\r\n                <Button onClick={handleReset} variant=\"outline\">Limpiar</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FiltrosProductos;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,QAAQ,mCAAmC;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAChE;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAACQ,OAAO,CAACK,MAAM,IAAI,EAAE,CAAC;;EAElE;EACAZ,SAAS,CAAC,MAAM;IACZ,MAAMa,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC7B;MACA;MACA;MACAR,UAAU,CAACS,WAAW,KAAK;QAAE,GAAGA,WAAW;QAAEH,MAAM,EAAEF;MAAW,CAAC,CAAC,CAAC;IACvE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACTM,YAAY,CAACH,OAAO,CAAC;IACzB,CAAC;EACL,CAAC,EAAE,CAACH,UAAU,EAAEJ,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE9B,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtBN,aAAa,CAAC,EAAE,CAAC;IACjBH,YAAY,CAAC,CAAC;EAClB,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACZW,aAAa,CAACJ,OAAO,CAACK,MAAM,IAAI,EAAE,CAAC;EACvC,CAAC,EAAE,CAACL,OAAO,CAACK,MAAM,CAAC,CAAC;EAEpB,oBACIR,OAAA;IAAKc,SAAS,EAAC,oEAAoE;IAAAC,QAAA,gBAC/Ef,OAAA;MAAKc,SAAS,EAAC,yBAAyB;MAAAC,QAAA,eACpCf,OAAA,CAACH,KAAK;QACFmB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,4CAAyC;QACrDC,KAAK,EAAEZ,UAAW;QAClBa,QAAQ,EAAGC,CAAC,IAAKb,aAAa,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CJ,SAAS,EAAC;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAaNzB,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1Bf,OAAA,CAACF,MAAM;QAAC4B,OAAO,EAAEb,WAAY;QAACc,OAAO,EAAC,SAAS;QAAAZ,QAAA,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CAzDIJ,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AA2DtB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}