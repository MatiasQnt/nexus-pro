{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matias\\\\nexus-pro\\\\src\\\\components\\\\ui\\\\ButtonGroup.js\";\n// src/components/ui/ButtonGroup.jsx\nimport React from 'react';\n// Asumiendo que `cn` y `Button` están accesibles o se importan.\n// Si cn está en otro archivo, ajusta la ruta.\n// Si ComponentesUI.js exporta solo Button, entonces import { Button } from './ComponentesUI';\nimport { Button } from './ComponentesUI'; // Asegúrate de que esta importación sea correcta\n\n// Función simple para combinar clases, si no tienes 'cn' de shadcn/ui u otro.\n// Si ya tienes una utilidad 'cn', úsala.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cn = (...classes) => classes.filter(Boolean).join(' ');\nconst ButtonGroup = ({\n  children,\n  className\n}) => {\n  const childrenArray = React.Children.toArray(children).filter(React.isValidElement);\n  if (childrenArray.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(\"inline-flex -space-x-px rounded-md shadow-sm\", className),\n    role: \"group\",\n    children: childrenArray.map((child, index) => {\n      // Asegúrate de que el hijo sea un Button\n      if (child.type !== Button) {\n        console.warn(\"ButtonGroup: Todos los hijos deben ser componentes <Button>.\");\n        return child;\n      }\n      let buttonClasses = '';\n      const totalChildren = childrenArray.length;\n      if (totalChildren === 1) {\n        // Si solo hay un botón, redondear completamente\n        buttonClasses = 'rounded-md';\n      } else {\n        // Primer botón: redondea solo a la izquierda\n        if (index === 0) {\n          buttonClasses = 'rounded-l-md rounded-r-none';\n        }\n        // Último botón: redondea solo a la derecha\n        else if (index === totalChildren - 1) {\n          buttonClasses = 'rounded-r-md rounded-l-none';\n        }\n        // Botones intermedios: sin redondeo\n        else {\n          buttonClasses = 'rounded-none';\n        }\n      }\n\n      // Clonar el botón para añadir las clases de agrupamiento\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: cn(child.props.className,\n        // Mantén las clases existentes del botón\n        buttonClasses // Aplica las clases de redondeo de grupo\n        // Para los botones secundarios, asegúrate de que el borde derecho no se pierda si lo quieres visible\n        // o que el -space-x-px lo maneje correctamente (Tailwind lo hace bien con bordes)\n        )\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = ButtonGroup;\nexport { ButtonGroup };\nvar _c;\n$RefreshReg$(_c, \"ButtonGroup\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","cn","classes","filter","Boolean","join","ButtonGroup","children","className","childrenArray","Children","toArray","isValidElement","length","role","map","child","index","type","console","warn","buttonClasses","totalChildren","cloneElement","props","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Matias/nexus-pro/src/components/ui/ButtonGroup.js"],"sourcesContent":["// src/components/ui/ButtonGroup.jsx\r\nimport React from 'react';\r\n// Asumiendo que `cn` y `Button` están accesibles o se importan.\r\n// Si cn está en otro archivo, ajusta la ruta.\r\n// Si ComponentesUI.js exporta solo Button, entonces import { Button } from './ComponentesUI';\r\nimport { Button } from './ComponentesUI'; // Asegúrate de que esta importación sea correcta\r\n\r\n// Función simple para combinar clases, si no tienes 'cn' de shadcn/ui u otro.\r\n// Si ya tienes una utilidad 'cn', úsala.\r\nconst cn = (...classes) => classes.filter(Boolean).join(' '); \r\n\r\nconst ButtonGroup = ({ children, className }) => {\r\n  const childrenArray = React.Children.toArray(children).filter(React.isValidElement);\r\n\r\n  if (childrenArray.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"inline-flex -space-x-px rounded-md shadow-sm\", className)} role=\"group\">\r\n      {childrenArray.map((child, index) => {\r\n        // Asegúrate de que el hijo sea un Button\r\n        if (child.type !== Button) {\r\n          console.warn(\"ButtonGroup: Todos los hijos deben ser componentes <Button>.\");\r\n          return child;\r\n        }\r\n\r\n        let buttonClasses = '';\r\n        const totalChildren = childrenArray.length;\r\n\r\n        if (totalChildren === 1) {\r\n          // Si solo hay un botón, redondear completamente\r\n          buttonClasses = 'rounded-md';\r\n        } else {\r\n          // Primer botón: redondea solo a la izquierda\r\n          if (index === 0) {\r\n            buttonClasses = 'rounded-l-md rounded-r-none';\r\n          } \r\n          // Último botón: redondea solo a la derecha\r\n          else if (index === totalChildren - 1) {\r\n            buttonClasses = 'rounded-r-md rounded-l-none';\r\n          } \r\n          // Botones intermedios: sin redondeo\r\n          else {\r\n            buttonClasses = 'rounded-none';\r\n          }\r\n        }\r\n\r\n        // Clonar el botón para añadir las clases de agrupamiento\r\n        return React.cloneElement(child, {\r\n          className: cn(\r\n            child.props.className, // Mantén las clases existentes del botón\r\n            buttonClasses,        // Aplica las clases de redondeo de grupo\r\n            // Para los botones secundarios, asegúrate de que el borde derecho no se pierda si lo quieres visible\r\n            // o que el -space-x-px lo maneje correctamente (Tailwind lo hace bien con bordes)\r\n          ),\r\n        });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ButtonGroup };"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA,SAASC,MAAM,QAAQ,iBAAiB,CAAC,CAAC;;AAE1C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,EAAE,GAAGA,CAAC,GAAGC,OAAO,KAAKA,OAAO,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAE5D,MAAMC,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAC/C,MAAMC,aAAa,GAAGZ,KAAK,CAACa,QAAQ,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAACJ,MAAM,CAACN,KAAK,CAACe,cAAc,CAAC;EAEnF,IAAIH,aAAa,CAACI,MAAM,KAAK,CAAC,EAAE;IAC9B,OAAO,IAAI;EACb;EAEA,oBACEb,OAAA;IAAKQ,SAAS,EAAEP,EAAE,CAAC,8CAA8C,EAAEO,SAAS,CAAE;IAACM,IAAI,EAAC,OAAO;IAAAP,QAAA,EACxFE,aAAa,CAACM,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MACnC;MACA,IAAID,KAAK,CAACE,IAAI,KAAKpB,MAAM,EAAE;QACzBqB,OAAO,CAACC,IAAI,CAAC,8DAA8D,CAAC;QAC5E,OAAOJ,KAAK;MACd;MAEA,IAAIK,aAAa,GAAG,EAAE;MACtB,MAAMC,aAAa,GAAGb,aAAa,CAACI,MAAM;MAE1C,IAAIS,aAAa,KAAK,CAAC,EAAE;QACvB;QACAD,aAAa,GAAG,YAAY;MAC9B,CAAC,MAAM;QACL;QACA,IAAIJ,KAAK,KAAK,CAAC,EAAE;UACfI,aAAa,GAAG,6BAA6B;QAC/C;QACA;QAAA,KACK,IAAIJ,KAAK,KAAKK,aAAa,GAAG,CAAC,EAAE;UACpCD,aAAa,GAAG,6BAA6B;QAC/C;QACA;QAAA,KACK;UACHA,aAAa,GAAG,cAAc;QAChC;MACF;;MAEA;MACA,oBAAOxB,KAAK,CAAC0B,YAAY,CAACP,KAAK,EAAE;QAC/BR,SAAS,EAAEP,EAAE,CACXe,KAAK,CAACQ,KAAK,CAAChB,SAAS;QAAE;QACvBa,aAAa,CAAS;QACtB;QACA;QACF;MACF,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAjDIvB,WAAW;AAmDjB,SAASA,WAAW;AAAG,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}