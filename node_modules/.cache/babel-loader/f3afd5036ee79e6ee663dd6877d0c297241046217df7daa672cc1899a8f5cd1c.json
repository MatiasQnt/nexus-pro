{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matias\\\\nexus-pro\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://127.0.0.1:8000/api';\n\n// --- Función para decodificar JWT de forma segura ---\nconst decodificarToken = token => {\n  try {\n    // Esta función decodifica la parte 'payload' de un token JWT.\n    // atob() decodifica una cadena de texto que ha sido codificada en base-64.\n    // El token se divide por los puntos, y tomamos la segunda parte (el payload).\n    return JSON.parse(atob(token.split('.')[1]));\n  } catch (e) {\n    console.error(\"Error al decodificar el token\", e);\n    return null;\n  }\n};\nexport const ContextoAuth = /*#__PURE__*/createContext();\nexport const ProveedorAuth = ({\n  children\n}) => {\n  _s();\n  const [tokensAuth, setTokensAuth] = useState(() => localStorage.getItem('tokensAuth') ? JSON.parse(localStorage.getItem('tokensAuth')) : null);\n  const [usuario, setUsuario] = useState(() => {\n    const tokens = localStorage.getItem('tokensAuth');\n    if (!tokens) return null;\n    try {\n      return decodificarToken(JSON.parse(tokens).access);\n    } catch (e) {\n      return null;\n    }\n  });\n  const [cargando, setCargando] = useState(true);\n  const iniciarSesion = async (nombreUsuario, contrasena) => {\n    try {\n      const response = await fetch(`${API_URL}/token/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: nombreUsuario,\n          password: contrasena\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const usuarioDecodificado = decodificarToken(data.access);\n        setTokensAuth(data);\n        setUsuario(usuarioDecodificado);\n        localStorage.setItem('tokensAuth', JSON.stringify(data));\n      } else {\n        alert('Usuario o contraseña incorrectos.');\n      }\n    } catch (error) {\n      alert('Error de conexión con el servidor.');\n    }\n  };\n  const cerrarSesion = useCallback(() => {\n    setTokensAuth(null);\n    setUsuario(null);\n    localStorage.removeItem('tokensAuth');\n  }, []);\n  const actualizarToken = useCallback(async () => {\n    const tokensActuales = JSON.parse(localStorage.getItem('tokensAuth'));\n    if (!(tokensActuales !== null && tokensActuales !== void 0 && tokensActuales.refresh)) {\n      cerrarSesion();\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/token/refresh/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'refresh': tokensActuales.refresh\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const nuevosTokens = {\n          ...tokensActuales,\n          access: data.access\n        };\n        setTokensAuth(nuevosTokens);\n        setUsuario(decodificarToken(data.access));\n        localStorage.setItem('tokensAuth', JSON.stringify(nuevosTokens));\n      } else {\n        cerrarSesion();\n      }\n    } catch {\n      cerrarSesion();\n    }\n  }, [cerrarSesion]);\n  useEffect(() => {\n    const cuatroMinutos = 1000 * 60 * 4;\n    const interval = setInterval(() => {\n      if (tokensAuth) {\n        actualizarToken();\n      }\n    }, cuatroMinutos);\n    return () => clearInterval(interval);\n  }, [tokensAuth, actualizarToken]);\n  useEffect(() => {\n    setCargando(false);\n  }, []);\n  const datosContexto = {\n    usuario,\n    tokensAuth,\n    iniciarSesion,\n    cerrarSesion\n  };\n  return /*#__PURE__*/_jsxDEV(ContextoAuth.Provider, {\n    value: datosContexto,\n    children: cargando ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(ProveedorAuth, \"b66EpTh3hxZKvZjJF7FkHDcyKPo=\");\n_c = ProveedorAuth;\nvar _c;\n$RefreshReg$(_c, \"ProveedorAuth\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useCallback","jsxDEV","_jsxDEV","API_URL","decodificarToken","token","JSON","parse","atob","split","e","console","error","ContextoAuth","ProveedorAuth","children","_s","tokensAuth","setTokensAuth","localStorage","getItem","usuario","setUsuario","tokens","access","cargando","setCargando","iniciarSesion","nombreUsuario","contrasena","response","fetch","method","headers","body","stringify","username","password","data","json","ok","usuarioDecodificado","setItem","alert","cerrarSesion","removeItem","actualizarToken","tokensActuales","refresh","nuevosTokens","cuatroMinutos","interval","setInterval","clearInterval","datosContexto","Provider","value","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Matias/nexus-pro/src/context/AuthContext.js"],"sourcesContent":["import React, { useState, useEffect, createContext, useCallback } from 'react';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000/api';\r\n\r\n// --- Función para decodificar JWT de forma segura ---\r\nconst decodificarToken = (token) => {\r\n    try {\r\n        // Esta función decodifica la parte 'payload' de un token JWT.\r\n        // atob() decodifica una cadena de texto que ha sido codificada en base-64.\r\n        // El token se divide por los puntos, y tomamos la segunda parte (el payload).\r\n        return JSON.parse(atob(token.split('.')[1]));\r\n    } catch (e) {\r\n        console.error(\"Error al decodificar el token\", e);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const ContextoAuth = createContext();\r\n\r\nexport const ProveedorAuth = ({ children }) => {\r\n    const [tokensAuth, setTokensAuth] = useState(() => localStorage.getItem('tokensAuth') ? JSON.parse(localStorage.getItem('tokensAuth')) : null);\r\n    const [usuario, setUsuario] = useState(() => {\r\n        const tokens = localStorage.getItem('tokensAuth');\r\n        if (!tokens) return null;\r\n        try {\r\n            return decodificarToken(JSON.parse(tokens).access);\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    });\r\n    const [cargando, setCargando] = useState(true);\r\n\r\n    const iniciarSesion = async (nombreUsuario, contrasena) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}/token/`, { \r\n                method: 'POST', \r\n                headers: { 'Content-Type': 'application/json' }, \r\n                body: JSON.stringify({ username: nombreUsuario, password: contrasena }) \r\n            });\r\n            const data = await response.json();\r\n            if (response.ok) { \r\n                const usuarioDecodificado = decodificarToken(data.access);\r\n                setTokensAuth(data); \r\n                setUsuario(usuarioDecodificado); \r\n                localStorage.setItem('tokensAuth', JSON.stringify(data)); \r\n            } else { \r\n                alert('Usuario o contraseña incorrectos.'); \r\n            }\r\n        } catch (error) {\r\n            alert('Error de conexión con el servidor.');\r\n        }\r\n    };\r\n\r\n    const cerrarSesion = useCallback(() => { \r\n        setTokensAuth(null); \r\n        setUsuario(null); \r\n        localStorage.removeItem('tokensAuth'); \r\n    }, []);\r\n\r\n    const actualizarToken = useCallback(async () => {\r\n        const tokensActuales = JSON.parse(localStorage.getItem('tokensAuth'));\r\n        if (!tokensActuales?.refresh) {\r\n            cerrarSesion();\r\n            return;\r\n        }\r\n        try {\r\n            const response = await fetch(`${API_URL}/token/refresh/`, { \r\n                method: 'POST', \r\n                headers: { 'Content-Type': 'application/json' }, \r\n                body: JSON.stringify({ 'refresh': tokensActuales.refresh }) \r\n            });\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                const nuevosTokens = { ...tokensActuales, access: data.access };\r\n                setTokensAuth(nuevosTokens); \r\n                setUsuario(decodificarToken(data.access));\r\n                localStorage.setItem('tokensAuth', JSON.stringify(nuevosTokens));\r\n            } else { \r\n                cerrarSesion(); \r\n            }\r\n        } catch { \r\n            cerrarSesion(); \r\n        }\r\n    }, [cerrarSesion]);\r\n\r\n    useEffect(() => { \r\n        const cuatroMinutos = 1000 * 60 * 4;\r\n        const interval = setInterval(() => { \r\n            if (tokensAuth) {\r\n                actualizarToken();\r\n            }\r\n        }, cuatroMinutos);\r\n        return () => clearInterval(interval);\r\n    }, [tokensAuth, actualizarToken]);\r\n\r\n    useEffect(() => { \r\n        setCargando(false); \r\n    }, []);\r\n\r\n    const datosContexto = { usuario, tokensAuth, iniciarSesion, cerrarSesion };\r\n\r\n    return (\r\n        <ContextoAuth.Provider value={datosContexto}>\r\n            {cargando ? <div className=\"min-h-screen flex items-center justify-center\">Cargando...</div> : children}\r\n        </ContextoAuth.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}